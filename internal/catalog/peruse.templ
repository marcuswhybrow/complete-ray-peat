
package catalog

import "github.com/marcuswhybrow/ray-peat-rodeo/internal/global"
import "fmt"
import "strings"
import "github.com/marcuswhybrow/ray-peat-rodeo/internal/utils"

templ Peruse(asset *Asset, catalog *Catalog) {
	@global.Base(asset.FrontMatter.Source.Title) {
		<div class="flex h-screen">
			<div class="w-8 flex-auto overflow-y-scroll pt-8 pl-8 pr-8">
				<div id="rpr-search">
					<form class="mb-4">
						<input
							id="rpr-search-input"
							type="text"
							placeholder="Search Ray Peat Rodeo"
							class="w-full border border-slate-400 rounded px-4 py-2"
						/>
					</form>
					<div>
						<h3>Filters</h3>
						<div
							id="rpr-search-filters"
							class="
                    [&>h3]:text-bold
                  "
						></div>
					</div>
				</div>
				<div id="assets">
					for _, file := range catalog.Assets {
						<a
							href={ templ.URL(file.UrlAbsPath) }
							hx-swap="innerHTML"
							hx-get={ file.UrlAbsPath }
							hx-push-url={ file.UrlAbsPath }
							hx-target="#reading-pane"
							hx-select="article"
							id={ file.UrlAbsPath + "/" }
							class="
                    asset
                    text-xs text-slate-500 inline-block bg-slate-100 rounded mr-2 mb-2 overflow-hidden
                    [&.clicked]:bg-slate-300 [&.clicked]:shadow
                    hit [&:not(.hit)]:hidden
                    [&:not(.has-excerpt)>.excerpt]:hidden
                    inline-flex flex-col [&.has-excerpt]:flex
                  "
							_="
                    on click 
                      remove .clicked from .clicked in closest parent <div/>
                      add .clicked to me
                  "
						>
							<div class="flex">
								<span class="px-2 py-1 inline-block bg-slate-200">
									{ file.Date }
								</span>
								<span class="flex-auto px-1 py-1 inline-block">
									{ file.FrontMatter.Source.Title }
								</span>
								if file.FrontMatter.Completion.Content && file.FrontMatter.Transcription.Kind == "auto-generated" {
									<span
										title="AI Generated Transcript Available"
										class="inline-block cursor-help bg-orange-100 text-orange-400 px-2 py-1"
									>AI</span>
								}
								switch file.FrontMatter.Source.Kind {
									case "article":
										<span class="inline-block bg-pink-100 text-pink-400 px-2 py-1" title="Article">W</span>
									case "book":
										<span class="inline-block bg-red-100 text-red-400 px-2 py-1" title="Book">B</span>
									case "dissertation":
										<span class="inline-block bg-red-100 text-red-400 px-2 py-1" title="Dissertation">D</span>
									case "thesis":
										<span class="inline-block bg-red-100 text-red-400 px-2 py-1" title="Thesis">T</span>
									case "paper":
										<span class="inline-block bg-yellow-100 text-yellow-400 px-2 py-1" title="Paper">P</span>
									case "video":
										<span class="inline-block bg-purple-100 text-purple-400 px-2 py-1" title="Video">V</span>
									case "audio":
										<span class="inline-block bg-blue-100 text-blue-400 px-2 py-1" title="Audio">A</span>
									case "newsletter":
										<span class="inline-block bg-green-100 text-green-400 px-2 py-1" title="Newsletter">N</span>
									default:
										<span class="inline-block bg-slate-100 text-slate-400 px-2 py-1" title={ file.FrontMatter.Source.Kind }>{ file.FrontMatter.Source.Kind }</span>
								}
							</div>
							<div
								class="
                      excerpt
                      px-2 py-2 border-t border-slate-400
                    "
							></div>
						</a>
					}
				</div>
			</div>
			<div id="reading-pane" class=" w-32 flex-auto overflow-y-scroll">
				<article
					class="p-8 relative"
					data-pagefind-body
					_="
            set :gap to 16
            set :newIssueLink to 'https://github.com/marcuswhybrow/ray-peat-rodeo/issues/new'
            set :domain to 'https://raypeat.rodeo'
            set :newline to '\n\n'

            on mouseup or touchend
              measure my top
              set anchorTop to top
              measure my left
              set anchorLeft to left
              set selection to getSelection()
              set selectedText to selection as a String

              -- Allows selection.isCollapsed to adjust. Otherwise removing a 
              -- selection by clicking on it doesn't register. I don't think 
              -- there's a dedicated event that bubbles for closed selections.
              wait 1ms

              if not selection.isCollapsed
                set boundingBox to selection.getRangeAt(0).getBoundingClientRect()
                remove .hidden from #new-issue-popup 
                set newTop to (boundingBox.bottom + :gap) - anchorTop
                set newLeft to boundingBox.left - anchorLeft
                set #new-issue-popup's *top to newTop + 'px'
                set #new-issue-popup's *left to newLeft + 'px'

                set assetLink to :domain + window.location.pathname
                set assetTitle to the textContent of the first <h1/>
                set bodyPre to 'Hi, I\\'ve found an issue with this text from [' + assetTitle + '](' + assetLink + '):' + :newline
                set bodyMain to '> ' + selectedText
                set bodyPost to :newline + '[consider describing the issue here]'

                set body to encodeURIComponent(bodyPre + bodyMain + bodyPost)
                set title to encodeURIComponent(assetTitle)
                set newQuotedIssueLink to :newIssueLink + '?title=' + title + '&body=' + body

                set #new-issue-popup @href to newQuotedIssueLink
              else
                add .hidden to #new-issue-popup
              end
          "
				>
					<a
						id="new-issue-popup"
						class="
              hidden absolute bg-yellow-200 rounded-lg p-8 pb-6 z-40 transition-all
              shadow-lg shadow-yellow-400/50
              hover:shadow-2xl hover:shadow-yellow-600/60
              hover:scale-110
              [&:hover_img]:opacity-75
              [&:hover_div]:border-black/75
              [&:hover_div]:text-black/65
            "
						href="https://github.com/marcuswhybrow/ray-peat-rodeo/issues/new"
						target="_blank"
					>
						<div class="grid grid-cols-2 gap-4">
							<div
								class="
                  p-4 mb-4
                  border-2 border-black/50 border-dashed 
                  rounded-lg
                "
							>
								<img
									src="/assets/images/plus-line-icon.svg"
									alt="Plus icon"
									class="block w-8 mx-auto opacity-50"
								/>
							</div>
							<div class="italic w-20 leading-snug text-black/60">
								Spotted an issue with this text?
							</div>
						</div>
						<div class="font-bold uppercase text-center text-black/50 tracking-wider text-sm">
							New Issue From Quote
						</div>
					</a>
					<header class="max-w-3xl mx-auto">
						<!-- Interview title -->
						<div class="text-center mb-16 mt-16">
							<!-- Details -->
							<p class="mb-4">
								<a
									class="text-fuchsia-900/70 tracking-wider hover:underline hover:text-fuchsia-950"
									href={ templ.SafeURL(asset.FrontMatter.Source.Url) }
									data-medium={ asset.GetFriendlyKind() }
									data-pagefind-filter="Medium[data-medium]"
								>
									{ asset.Date }
								</a>
								<a
									data-pagefind-filter="Author"
									class="text-fuchsia-900/80 rounded bg-white/20 py-1 px-4 ml-4 tracking-wide hover:underline"
									href={ templ.SafeURL(asset.GetSeriesAbsUrl()) }
								>{ asset.FrontMatter.Source.Series }</a>
							</p>
							<!-- Title -->
							<h1
								class={
									templ.KV("text-4xl", len(asset.FrontMatter.Source.Title) < 20),
									"font-bold text-3xl text-fuchsia-950/90 tracking-wide hover:underline hover:text-fuchsia-950 mt-0",
								}
								if asset.IsComplete() {
									data-todo="Complete"
								} else {
									data-todo="Todo"
								}
								if asset.HasIssues() {
									data-has-issues="Yes"
								} else {
									data-has-issues="No"
								}
								data-issue-count={ fmt.Sprint(asset.IssueCount()) }
								data-pagefind-filter="Has Issues[data-has-issues], Todo[data-todo]"
							>
								<a href={ templ.SafeURL(asset.UrlAbsPath) }>{ asset.FrontMatter.Source.Title }</a>
							</h1>
						</div>
					</header>
					<main
						style="counter-reset:sidenote"
						class="mb-32 max-w-2xl mx-auto relative"
					>
						<style>
              mark {
                background-color: #fef08a
              }
              p {
                margin-bottom: 16px;
              }
              blockquote {
                padding-left: 16px;
                border-left: 2px solid lightgray;
                font-size: 1.1rem;
                font-style: italic;
                line-height: 2rem;
                margin: 24px 0;
              }

              h2 {
                font-weight: bold;
                font-size: 2rem;
                margin-top: 96px;
                margin-bottom: 12px;
              }

            </style>
						<!-- Content -->
						<div class="relative">
							@utils.Unsafe(string(asset.Html))
						</div>
						if !asset.FrontMatter.Completion.Content {
							<div data-pagefind-ignore class="mr-16 mb-32">
								<!-- Message -->
								<div class="rounded shadow p-8 bg-gradient-to-b from-gray-50 to-gray-100 text-gray-900 mb-8">
									<p>
										if asset.FrontMatter.Source.Url != "" {
											This { strings.ToLower(asset.GetFriendlyKind()) } is 
											<a
												href={ templ.URL(asset.FrontMatter.Source.Url) }
												class="font-bold text-gray-800 underline decoration-2 hover:decoration-4"
											>available on { utils.UrlHostname(asset.FrontMatter.Source.Url) }</a>,
											but hasn't yet been added to Ray Peat Rodeo.
											if asset.FrontMatter.Transcription.Url != "" {
												See too, this
												<a
													href={ templ.URL(asset.FrontMatter.Transcription.Url) }
													class="font-bold text-gray-800 underline decoration-2 hover:decoration-4"
													target="_blank"
												>existing transcript</a>.
											}
										} else {
											This { strings.ToLower(asset.GetFriendlyKind()) } is missing from Ray Peat Rodeo.
											if asset.FrontMatter.Transcription.Url != "" {
												However, there is an 
												<a
													href={ templ.URL(asset.FrontMatter.Transcription.Url) }
													class="font-bold text-gray-800 underline decoration-2 hover:decoration-4"
													target="_blank"
												>existing transcript</a>
											}
										}
										If you're familiar with Markdown, you can 
										<a
											href={ templ.URL(asset.GitHubEditUrl) }
											class="font-bold text-gray-800 underline decoration-2 hover:decoration-4"
											target="_blank"
										>edit this page</a> via a GitHub account, and submit your 
										changes as a pull request. Or
										<a
											href={ global.SPONSOR_LINK }
											class="font-bold text-gray-800 underline decoration-2 hover:decoration-4"
											target="_blank"
										>Support me on GitHub Sponsors</a> { "if" } you like 😊.
									</p>
								</div>
							</div>
						}
					</main>
				</article>
			</div>
		</div>
	}
}

type MapEnumeration[V any] struct {
	Key     string
	Index   int
	Value   V
	IsFirst bool
	IsLast  bool
}

// Utility for converting a map into a slice appropriate for rendering to a
// human readable list.
func MapToSlice[V any](m map[string]V) []MapEnumeration[V] {
	i := 0
	l := len(m)
	var results []MapEnumeration[V]

	for key, value := range m {
		results = append(results, MapEnumeration[V]{
			Index:   i,
			Key:     key,
			Value:   value,
			IsFirst: i == 0,
			IsLast:  i == l-1,
		})
		i++
	}

	return results
}

// Small note in the flow of, but distinct from, speaker messages.
templ StatusChange() {
	<div data-pagefind-ignore class="text-sm text-gray-400 w-2/3 mx-auto text-center">
		{ children... }
	</div>
}
