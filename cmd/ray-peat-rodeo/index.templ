package main

import "fmt"
import "github.com/marcuswhybrow/ray-peat-rodeo/internal/global"

templ ChatCard(file *File) {
	<a
 		href={ templ.URL(file.Permalink) }
 		class={
			"relative align-top inline-block transition-all m-4 hover:shadow-2xl rounded-lg w-80 font-bold hover:scale-110",
			templ.KV(templ.SafeClass("text-gray-600 shadow shadow-gray-500/20 hover:shadow-gray-400/50 bg-gradient-to-br from-gray-50 to-gray-100"), file.IsTodo),
			templ.KV(templ.SafeClass("text-sky-900 shadow-lg shadow-sky-800/20 hover:shadow-sky-200/70 bg-gradient-to-br hover:bg-gradient-to-br from-sky-100 hover:from-sky-50 to-blue-200 hover:to-blue-300"), !file.IsTodo),
		}
	>
		<div class="bg-gradient-to-br from-white/60 to-white/40 p-8 pb-4">
			<span class="text-xs block font-normal mb-4">
				{ file.FrontMatter.Source.Series }
			</span>
			<span class="mb-4 block tracking-tight leading-6">
				{ file.FrontMatter.Source.Title }
			</span>
		</div>
		<div class="p-8 pt-4">
			if file.IssueCount > 0 {
				<br/>
				<span class="inline-block bg-gradient-to-br from-yellow-100 to-amber-200 py-2 px-4 rounded-full text-sm text-yellow-900">
					<img src="/assets/images/github-mark.svg" class="w-4 h-4 relative -top-px inline-block mr-1"/>
					{ fmt.Sprint(file.IssueCount) } issue
					if file.IssueCount > 1 {
						s 
					}
				</span>
			}
			if file.IsTodo && len(file.FrontMatter.Transcription.Url) > 0 {
				<br/>
				switch file.FrontMatter.Transcription.Kind {
					case "text":
						<span class="inline-block bg-gradient-to-br from-lime-50 to-green-300 py-2 px-4 rounded-full text-sm text-green-900">ðŸŽ‰ Human Transcript</span>
					default:
						<span class="inline-block bg-gradient-to-br from-green-100 to-green-200 py-2 px-4 rounded-full text-sm text-green-900 font-normal">Transcript Exists</span>
				}
			}
			if len(file.FrontMatter.Speakers) > 0 {
				<span
 					class={
						"inline-block py-2 ml-2 text-sm font-normal",
						templ.KV("text-gray-900", file.IsTodo),
						templ.KV("text-sky-900", !file.IsTodo),
					}
				>
					<strong>{ fmt.Sprint(len(file.FrontMatter.Speakers)) }</strong>
					people
				</span>
			}
		</div>
	</a>
}

templ renderLatest(files []*File) {
	<div
 		class="text-center"
	>
		for _, file := range files {
			@ChatCard(file)
		}
	</div>
}

templ renderSuggestions(files []*File) {
	<div class="text-center">
		for _, file := range files {
			@ChatCard(file)
		}
	</div>
}

templ content(latest, humanTrascripts []*File) {
}

var marcus = map[string]string{"MW": "Marcus"}

templ keySrc(title string) {
	<span class="text-red-400">{ title }:</span>
}

templ mentionSrc(primary, secondary, label string) {
	<span class="text-purple-500">[[{ primary }]]</span>
}

templ speakerSrc(initials string) {
	<span class="text-red-500">{ initials }:</span>
}

templ issueSrc(id int) {
	<span class="text-purple-500">{ "{#" }{ fmt.Sprint(id) }{ "}" }</span>
}

templ markdown() {
	<div class="inline-block relative">
		<div class="w-[150px] h-[100px] bg-pink-100 rounded-lg absolute -rotate-1 -left-8"></div>
		<div class="w-[100px] h-[90px] bg-pink-50 rounded-lg absolute -rotate-2 -left-32 top-32"></div>
		<div class="w-[40px] h-[30px] bg-pink-50/60 rounded absolute -rotate-3 -left-24 top-16"></div>
		<div class="w-[200px] h-[150px] bg-pink-200/60 rounded-lg absolute -rotate-2 -right-32 -bottom-32"></div>
		<div
 			class="
      relative top-16
      text-left
      rounded-lg w-[500px] overflow-hidden
      shadow-2xl
      shadow-pink-500/10
      font-mono text-lg text-pink-600
      bg-gradient-to-bl from-pink-300 to-white
      -rotate-3
    "
		>
			<div class="h-8">
				<div class="pt-6 pl-8">
					<div class="rounded-full bg-red-400/40 w-4 h-4 inline-block"></div>
					<div class="rounded-full bg-red-400/40 w-4 h-4 ml-[10px] inline-block"></div>
					<div class="rounded-full bg-red-400/40 w-4 h-4 ml-[10px] inline-block"></div>
				</div>
			</div>
			<div id="frontmatter" class="px-8 pt-6 pb-6">
				<p>---</p>
				<p>
					@keySrc("speakers")
				</p>
				<p class="ml-4">
					@keySrc("RP")
					{ " " }Ray Peat
				</p>
				<p class="ml-4">
					@keySrc("I")
					{ " " }Interviewer
				</p>
				<p>---</p>
				<p>
					<br/>
					@speakerSrc("RP")
					{ " " }
					Oh, there was an Austrailian study 
					@issueSrc(12)
					{ " " }
					around that time.
				</p>
				<p>
					<br/>
					@speakerSrc("I")
					{ " " }
					And when did you first discover 
					@mentionSrc("Blake, William", "", "")
					?
				</p>
			</div>
		</div>
	</div>
}

templ program() {
	<div
 		class="
      inline-block align-top
      ml-16 mr-12
      mt-32
      rotate-90 2xl:rotate-0
      transition-all
    "
	>
		<span
 			class="
        pt-8 inline-block 
        text-transparent bg-clip-text 
        bg-gradient-to-b from-pink-300/50 to-70% to-purple-400/30
        text-9xl
      "
		>ðŸ‘‰</span>
	</div>
}

templ utterance(speaker string) {
	<div
 		class={
			"font-sans",
			templ.KV("ml-1 mr-16", speaker == "Ray Peat"),
			templ.KV("ml-16 mr-1", speaker != "Ray Peat"),
		}
	>
		<div
 			class={
				"text-sm mt-8 mb-4 block",
				templ.KV("text-gray-400", speaker == "Ray Peat"),
				templ.KV("text-sky-400", speaker != "Ray Peat"),
			}
		>
			{ speaker }
		</div>
		<div
 			class={
				"p-8 rounded shadow",
				templ.KV("text-gray-900 bg-gray-100", speaker == "Ray Peat"),
				templ.KV("text-sky-900 bg-gradient-to-br from-sky-100 to-blue-200", speaker != "Ray Peat"),
			}
		>
			{ children... }
		</div>
	</div>
}

templ blakeMention() {
	<span
 		hx-trigger="load"
 		hx-target="find .popup"
 		hx-get="/api/mentionable/popup/william-blake"
 		hx-swap="innerHTML"
 		hx-select=".hx-select"
 		class="relative cursor-pointer"
 		_={ `
      on mouseenter
        remove .hidden from .popup in me
        send stopWiggling to .label in me

      on mouseleave
        wait for mouseenter or 500ms
        if the result's type is not 'mouseenter'
          add .hidden to .popup in me
        end
      
    ` }
	>
		<span
 			class="
        label
        font-mono font-bold tracking-normal 
        drop-shadow-md box-decoration-clone 
        border-b hover:border-b-2
			  text-sky-800 hover:text-sky-900 shadow-pink-300 border-sky-800
        inline-block
        rotate-0
        transition-all
      "
 			_={ `
        on load 
          wait 1s
          trigger wiggle on me

        on wiggle
          set x to Math.random() * 10
          if x > 8 
            wait for stopWiggling or 8s
          else if x > 3
            wait for stopWiggling or 5s
          else 
            wait for stopWiggling or 2s
          end
          if the result's type is not 'stopWiggling'
            set my *transform to 'rotate(16deg)' then settle
            set my *transform to 'rotate(-6deg)' then settle
            set my *transform to 'rotate(6deg)' then settle
            set my *transform to 'rotate(-4deg)' then settle
            set my *transform to 'rotate(0deg)' then settle
            trigger wiggle on me
          end
        ` }
		>William Blake</span>?
		<span
 			class="
        popup
        bg-white shadow-2xl block absolute 
        hidden
        z-10 
        overflow-hidden
        overflow-y-auto 
        mb-4 
        w-[400px] h-[300px]
        left-[calc(50%-200px)]
        top-8
        scrollbar
        scrollbar-track-slate-100
        scrollbar-thumb-slate-200
      "
 			_="
        on click halt the event
      "
		>
			<span class="text-center text-gray-400 block p-8">
				loading William Blake...
			</span>
		</span>
	</span>
}

templ issue() {
	<span
 		class="
      z-10 block transition-all m-2 p-4 hover:translate-y-1 shadow-xl hover:shadow-2xl shadow-yellow-800/20 hover:shadow-yellow-600/40 rounded-md bg-gradient-to-br from-yellow-200 from-10% to-amber-200 hover:from-yellow-100 hover:from-70% hover:to-amber-200 xl:block w-2/5 mr-[-20%] float-right clear-right text-sm relative leading-5 tracking-tight
      cursor-pointer
    "
	>
		<span class="text-yellow-900 font-bold mr-0.5">
			<img src="/assets/images/github-mark.svg" class="h-4 w-4 inline-block relative top-[-1px] mr-0.5"/> #12
		</span>
		<span class="text-yellow-800">Which Australian study is Ray referring to?</span>
	</span>
}

templ output() {
	<div
 		class="
      inline-block align-top
      w-[90%] lg:w-[900px] 2xl:w-[700px] 
      text-left
      backdrop-blur-2xl
      bg-gradient-to-br from-white/90 to-gray-100/30
      rounded-lg 
      shadow-2xl shadow-purple-700/20
    "
	>
		<div class="py-4 bg-gradient-to-r from-blue-200 to-purple-300 rounded-t-lg">
			<div class="h-8 w-3/5 mx-auto bg-gradient-to-br from-white/60 to-white/50 rounded"></div>
		</div>
		<div class="px-8 pb-10 pt-2 max-w-xl mx-auto">
			@utterance("Ray Peat") {
				<p>
					There was an Australian study 
					@issue()
					around that time.
				</p>
			}
			@utterance("Interviewer") {
				<p>
					When did you first discover 
					@blakeMention()
				</p>
			}
		</div>
	</div>
}

templ demo() {
	<div
 		class="
      pt-32 pb-32
      text-center
      from-purple-300 to-white
      [background-image:radial-gradient(50%_50%_at_top_50%_right_33%,rgba(255,220,255,1),rgba(255,220,255,0))]
    "
	>
		@markdown()
		@program()
		@output()
	</div>
}

templ Index(latest, humanTrascripts []*File) {
	@Base("Ray Peat Rodeo") {
		<article class="pt-16">
			<section class="mb-32">
				@demo()
			</section>
			<section class="mb-32">
				@renderLatest(latest)
			</section>
			<section>
				<div class="text-center">
					<div class="text-slate-500 mb-16 max-w-xl text-4xl mx-auto leading-10">
						<span class="font-bold uppercase text-transparent bg-clip-text bg-gradient-to-br from-sky-500 to-purple-500">Ray Peat's interviews</span>
						<br/>
						...supercharged ðŸŽ‰ðŸ¥³
					</div>
				</div>
				<div class="max-w-xl mx-auto mt-40">
					@SpeakerStatusChange(marcus) {
						entered the chat
					}
					@Handle() {
						Marcus 
					}
					@Message() {
						<p class="mb-4">ðŸ‘‹ Hi, Marcus here. I'm a programmer and admirer of Ray Peat. His key idea is that <span class="">energy and structure are interdependent at every level</span>. The implications are profound.</p>
						<p>
							Ray's articles are availble on <a class="font-bold border-b border-b-black border-solid hover:border-b-2" href="https://raypeat.com">raypeat.com</a>, but his interviews are scattered. I created Ray Peat Rodeo to round up his public chats, and supercharge them for discoverability. 
							@Sidenote("search") {
								<b>Search</b> Ray Peat Rodeo:
								<br/>
								<br/>
								Hit <kbd class="font-bold border border-black px-2 py-1 rounded">/</kbd> key, or tap <span class="border-black border px-2 py-1 rounded"><img class="w-4 h-4 inline-block -mt-[5px]" src="assets/images/magnifying-glass-icon.svg"/></span> up top.
							}
						</p>
						<p class="mt-4">I'll pin the <b>latest additions</b> { "for" } you.</p>
					}
					<div class="mt-16">
						@SpeakerStatusChange(marcus) {
							pinned 4 chats
						}
					</div>
				</div>
				<div class="max-w-xl mx-auto mt-40 mb-16">
					@Handle() {
						Marcus 
					}
					@Message() {
						<p>
							<span class="font-bold text-3xl uppercase text-transparent bg-clip-text bg-gradient-to-br from-gray-600 to-gray-300 tracking-wider">Contributing ðŸ’•</span>
							@GitHubSidenoteLink(global.GITHUB_LINK + "/issues/new", "Open A New Issue") {
								Click here to open a new issue on GitHub.
							}
						</p>
						<p class="mt-4">
							If you spot a mistake, or have an idea, <a class="font-bold border-b border-b-black hover:border-b-2" href={ templ.URL(global.GITHUB_LINK + "/issues/new") }>open a new issue</a> on GitHub.
							There we can talk about the issue to get it fixed!
						</p>
						<p class="mt-4">
							Many interviews are awaiting transcription. If you want to <b>contribute a transcript</b>, open that interview and click the green "contribute" bubble up top to edit the source code.
						</p>
						<p>I'll pin a couple of interviews with existing transcripts that need adding.</p>
					}
				</div>
				<div class="mt-16">
					@SpeakerStatusChange(marcus) {
						pinned 2 chats
					}
				</div>
				<div class="mt-8">
					@renderSuggestions(humanTrascripts)
				</div>
				<div class="max-w-xl mx-auto mt-40 mb-16">
					@Handle() {
						Marcus 
					}
					@MarcusMessage() {
						<p>
							<a data-pagefind-ignore href={ templ.URL(global.SPONSOR_LINK) } class="block z-10 transition-all m-2 p-4 hover:translate-y-1 shadow-xl hover:shadow-2xl hover:shadow-yellow-800/40 rounded-md bg-gradient-to-br from-orange-300 from-0% via-purple-300 via-40% to-sky-300/50 hover:from-pink-200 hover:from-0% hover:via-purple-400 hover:via-60% hover:to-sky-300 xl:block w-3/5 mr-[-20%] lg:mr-[-20%] xl:mr-[-30%] float-right clear-right text-sm relative leading-5 tracking-tight backdrop-blur">
								<span class="text-slate-700 tracking-wide">
									<img src="/assets/images/github-mark.svg" class="w-11 h-11 float-left mr-4"/>
									<span class="text-white font-bold tracking-widest drop-shadow-md">Sponsor Marcus</span>
									<br/>
									Support Marcus' work on Ray Peat Rodeo.
								</span>
							</a>
							<span class="font-bold text-3xl uppercase text-transparent bg-clip-text bg-gradient-to-br from-yellow-700 to-orange-300 tracking-wider">Sponsor Me ðŸ’“</span>
						</p>
						<p class="mt-4">
							Ray Peat Rodeo is my attempt to preserve the legacy of Ray Peat in a durable, open source project.
						</p>
						<p class="mt-4">Funding me on <a href={ templ.URL(global.SPONSOR_LINK) } class="font-bold border-b border-b-black hover:border-b-2">GitHub Sponsors</a> makes a huge difference to how fast I can transcribe interviews and add new features.</p>
					}
				</div>
			</section>
		</article>
	}
}
