package main

import "github.com/marcuswhybrow/ray-peat-rodeo/internal/global"
import "fmt"
import "strings"
import "golang.org/x/text/cases"
import "golang.org/x/text/language"

type MapEnumeration[V any] struct {
	Key     string
	Index   int
	Value   V
	IsFirst bool
	IsLast  bool
}

// Utility for converting a map into a slice appropriate for rendering to a
// human readable list.
func MapToSlice[V any](m map[string]V) []MapEnumeration[V] {
	i := 0
	l := len(m)
	var results []MapEnumeration[V]

	for key, value := range m {
		results = append(results, MapEnumeration[V]{
			Index:   i,
			Key:     key,
			Value:   value,
			IsFirst: i == 0,
			IsLast:  i == l-1,
		})
		i++
	}

	return results
}

func kindToFilter(kind string) string {
	switch kind {
	case "audio":
		return "Audio Interview"
	case "video":
		return "Video Interview"
	case "text":
		return "Written Interview"
	default:
		return cases.Title(language.English, cases.Compact).String(kind)
	}
}

func kindToNaturalLanguageDescription(file *File) string {
	kind := file.FrontMatter.Source.Kind
	switch kind {
	case "audio", "article":
		return fmt.Sprintf("an %v", strings.ToLower(kindToFilter(kind)))
	default:
		return fmt.Sprintf("a %v", strings.ToLower(kindToFilter(kind)))
	}
}

func kindToNaturalLanguageAssociateWithRayPeat(file *File) string {
	kind := file.FrontMatter.Source.Kind
	switch kind {
	case "article", "newsletter", "book":
		return "by Ray Peat"
	default:
		if !file.FrontMatter.Completion.SpeakersIdentified {
			return "to do with Ray Peat"
		}
		fullName, ok := file.FrontMatter.Speakers["RP"]
		if ok && (fullName == "Ray Peat" || fullName == "Raymond Peat") {
			return "with Ray Peat"
		} else {
			return "about Ray Peat"
		}
	}
}

// Small note in the flow of, but distinct from, speaker messages.
templ StatusChange() {
	<div data-pagefind-ignore class="text-sm text-gray-400 w-2/3 mx-auto text-center">
		{ children... }
	</div>
}

templ RenderChat(file *File) {
	@Base(file.FrontMatter.Source.Title) {
		<article
			class="p-8 relative"
			data-pagefind-body
			_="
        set :gap to 16
        set :newIssueLink to 'https://github.com/marcuswhybrow/ray-peat-rodeo/issues/new'
        set :domain to 'https://raypeat.rodeo'
        set :newline to '\n\n'

        on mouseup or touchend
          measure my top
          set anchorTop to top
          measure my left
          set anchorLeft to left
          set selection to getSelection()
          set selectedText to selection as a String

          -- Allows selection.isCollapsed to adjust. Otherwise removing a 
          -- selection by clicking on it doesn't register. I don't think 
          -- there's a dedicated event that bubbles for closed selections.
          wait 1ms

          if not selection.isCollapsed
            set boundingBox to selection.getRangeAt(0).getBoundingClientRect()
            remove .hidden from #new-issue-popup 
            set newTop to (boundingBox.bottom + :gap) - anchorTop
            set newLeft to boundingBox.left - anchorLeft
            set #new-issue-popup's *top to newTop + 'px'
            set #new-issue-popup's *left to newLeft + 'px'

            set assetLink to :domain + window.location.pathname
            set assetTitle to the textContent of the first <h1/>
            set bodyPre to 'Hi, I\\'ve found an issue with this text from [' + assetTitle + '](' + assetLink + '):' + :newline
            set bodyMain to '> ' + selectedText
            set bodyPost to :newline + '[consider describing the issue here]'

            set body to encodeURIComponent(bodyPre + bodyMain + bodyPost)
            set title to encodeURIComponent(assetTitle)
            set newQuotedIssueLink to :newIssueLink + '?title=' + title + '&body=' + body

            set #new-issue-popup @href to newQuotedIssueLink
          else
            add .hidden to #new-issue-popup
          end
      "
		>
			<a
				id="new-issue-popup"
				class="
          hidden absolute bg-yellow-200 rounded-lg p-8 pb-6 z-40 transition-all
          shadow-lg shadow-yellow-400/50
          hover:shadow-2xl hover:shadow-yellow-600/60
          hover:scale-110
          [&:hover_img]:opacity-75
          [&:hover_div]:border-black/75
          [&:hover_div]:text-black/65
        "
				href="https://github.com/marcuswhybrow/ray-peat-rodeo/issues/new"
				target="_blank"
			>
				<div class="grid grid-cols-2 gap-4">
					<div
						class="
              p-4 mb-4
              border-2 border-black/50 border-dashed 
              rounded-lg
            "
					>
						<img
							src="/assets/images/plus-line-icon.svg"
							alt="Plus icon"
							class="block w-8 mx-auto opacity-50"
						/>
					</div>
					<div class="italic w-20 leading-snug text-black/60">
						Spotted an issue with this text?
					</div>
				</div>
				<div class="font-bold uppercase text-center text-black/50 tracking-wider text-sm">
					New Issue From Quote
				</div>
			</a>
			<header class="max-w-3xl mx-auto">
				<!-- Interview title -->
				<div
					class="p-12 pt-10 pb-16 mb-12 mt-16 rounded bg-gradient-to-br from-sky-200 to-purple-300 text-right relative"
				>
					<!-- Decoration -->
					<div class="w-8 h-8 rounded bg-fuchsia-200 absolute -bottom-4 -right-4 rotate-12"></div>
					<div class="w-16 h-3 rounded bg-purple-400/50 absolute bottom-8 -right-6 rotate-6"></div>
					<!-- Details -->
					<p class="text-right mt-2">
						<a
							class="text-fuchsia-900/70 tracking-wider hover:underline hover:text-fuchsia-950"
							href={ templ.SafeURL(file.FrontMatter.Source.Url) }
							data-medium={ kindToFilter(file.FrontMatter.Source.Kind) }
							data-pagefind-filter="Medium[data-medium]"
						>
							{ file.Date }
						</a>
						<span
							data-pagefind-filter="Author"
							class="text-fuchsia-900/80 rounded bg-white/20 py-1 px-4 ml-4 tracking-wide"
						>{ file.FrontMatter.Source.Series }</span>
					</p>
					<!-- Top mentionables -->
					<ol class="mb-0">
						for i, mentionCount := range AtMost(file.TopPrimaryMentionables(), 3) {
							if i > 0 && i < 3 {
								<span class="mr-2 text-fuchsia-900/50">/</span>
							}
							<li class="inline-block mb-2 mr-2 last:mr-0">
								<span
									class="text-fuchsia-900/80 uppercase trakcing-wider"
									title={ mentionCount.MentionablePart.PrefixFirst() + " (" + fmt.Sprint(mentionCount.Count) + " mention" + pluralise(mentionCount.Count, "s") + ")" }
								>{ mentionCount.MentionablePart.Cardinal }</span>
							</li>
						}
					</ol>
					<!-- Speakers -->
					<div class="mt-6">
						for _, speaker := range file.TopSpeakers() {
							<div
								title={ speaker.Name }
								class="inline-block rounded-full overflow-hidden bg-slate-200/60 w-10 h-10 text-center shadow mr-2 mb-4 last:mr-0 rotate-2 cursor-default"
							>
								if imgSrc, found := SpeakerAvatar(speaker.Name); found {
									<div class="w-[9999px] h-10">
										<img src={ imgSrc } alt={ speaker.GetName() } class="h-full "/>
									</div>
								} else {
									<span class="font-bold text-gray-500 text-sm relative top-1.5 cursor-default" title={ speaker.GetName() }>{ speaker.GetID() }</span>
								}
							</div>
						}
					</div>
					<!-- Title -->
					<h1
						class={
							templ.KV("text-4xl", len(file.FrontMatter.Source.Title) < 20),
							"font-bold text-3xl text-fuchsia-950/90 tracking-wide mt-6 hover:underline hover:text-fuchsia-950 mt-0",
						}
						if file.IsComplete() {
							data-todo="Complete"
						} else {
							data-todo="Todo"
						}
						if file.HasIssues() {
							data-has-issues="Yes"
						} else {
							data-has-issues="No"
						}
						data-issue-count={ fmt.Sprint(file.IssueCount()) }
						data-pagefind-filter="Has Issues[data-has-issues], Todo[data-todo]"
					>
						<a href={ templ.SafeURL(file.Permalink) }>{ file.FrontMatter.Source.Title }</a>
					</h1>
				</div>
			</header>
			<main
				style="counter-reset:sidenote"
				class="mb-32 max-w-2xl mx-auto relative"
			>
				<style>
          mark {
            background-color: #fef08a
          }
          p {
            margin-bottom: 16px;
          }
          blockquote {
            padding-left: 16px;
            border-left: 2px solid lightgray;
            font-size: 1.1rem;
            font-style: italic;
            line-height: 2rem;
            margin: 24px 0;
          }

          h2 {
            font-weight: bold;
            font-size: 2rem;
            margin-top: 96px;
            margin-bottom: 12px;
          }

        </style>
				<!-- Top side-bubbles -->
				<!-- Sponsor Project -->
				<a
					data-pagefind-ignore
					href={ global.SPONSOR_LINK }
					class="
            block z-10 transition-all m-2 hover:translate-y-1 shadow-xl hover:shadow-2xl shadow-green-800/20 hover:shadow-green-600/40 rounded-md bg-gradient-to-br from-lime-200 from-10% to-green-200 hover:from-lime-200 hover:from-70% hover:to-green-200 hover:scale-110 xl:block w-2/5 mr-[-10px] lg:mr-[-10%] xl:mr-[-20%] float-right clear-right text-sm relative leading-5 tracking-tight
            p-4
          "
				>
					<img
						src="/assets/images/avatars/marcus-whybrow.jpg"
						class="block rounded-full h-20 border-4 border-yellow-200 shadow-lg shadow-green-600/70 float-right ml-2 mb-2"
						alt="A picture of Marcus Whybrow, creator of Ray Peat Rodeo"
						title="Marcus Whybow, creator of Ray Peat Rodeo"
					/>
					<span class="block text-green-900 font-bold text-xl tracking-tight mb-2">From Marcus</span>
					<span class="block text-green-800">
						This is <em>{ kindToNaturalLanguageDescription(file) }</em>
						{ kindToNaturalLanguageAssociateWithRayPeat(file) }
						from { file.Date[:4] }. 
						<br/>
					</span>
					<span class="block text-green-800 mt-2">
						It's part of my effort to archive and augment Ray's complete works within this website, Ray Peat Rodeo.
					</span>
					<span class="block text-green-800 mt-2">
						You can <strong class="font-bold underline hover:text-black">donate to the project on GitHub sponsors</strong>, cheers<span class="text-lg leading-3 relative top-0.5">🥰</span>.
					</span>
				</a>
				if !file.IsComplete() {
					<!-- Report Card -->
					<div
						data-pagefind-ignore
						class="block z-10 transition-all m-4 p-4 hover:translate-y-1 shadow-lg hover:shadow-2xl shadow-gray-800/20 hover:shadow-gray-600/40 rounded-md bg-gradient-to-br from-gray-100 from-10% to-gray-100 hover:from-gray-50 hover:from-70% hover:to-gray-100 xl:block w-2/5 mr-[-10px] lg:mr-[-10%] xl:mr-[-20%] float-right clear-right text-sm relative leading-5 tracking-tight"
					>
						<h3 class="text-left uppercase tracking-wide text-lg mb-1 text-gray-600">Report Card</h3>
						<ul class="ml-3">
							<li>
								if file.FrontMatter.Completion.Content {
									<span class="inline-block w-2 h-2 rounded-full bg-green-600 shadow-lime-200 mr-3 relative"></span> <span class="text-green-700">Content added</span>
								} else {
									<span class="inline-block w-2 h-2 rounded-full bg-gray-300 mr-3"></span> <span class="text-gray-500">Content missing</span>
								}
							</li>
							<li>
								if file.FrontMatter.Completion.ContentVerified {
									<span class="inline-block w-2 h-2 rounded-full bg-green-600 shadow-lime-200 mr-3 relative"></span> <span class="text-green-700">Content verified</span>
								} else {
									<span class="inline-block w-2 h-2 rounded-full bg-gray-300 mr-3"></span> <span class="text-gray-500">Content unverified</span>
								}
							</li>
							if file.FrontMatter.Source.Kind == "audio" || file.FrontMatter.Source.Kind == "video" {
								<li>
									if file.FrontMatter.Completion.SpeakersIdentified {
										<span class="inline-block w-2 h-2 rounded-full bg-green-600 shadow-lime-200 mr-3 relative"></span> <span class="text-green-700">Speakers identified</span>
									} else {
										<span class="inline-block w-2 h-2 rounded-full bg-gray-300 mr-3"></span> <span class="text-gray-500">Speakers unidentified</span>
									}
								</li>
							}
							<li>
								if file.FrontMatter.Completion.Mentions {
									<span class="inline-block w-2 h-2 rounded-full bg-green-600 shadow-lime-200 mr-3 relative"></span> <span class="text-green-700">Mentions added</span>
								} else {
									<span class="inline-block w-2 h-2 rounded-full bg-gray-300 mr-3"></span> <span class="text-gray-500">Mentions incomplete</span>
								}
							</li>
							<li>
								if file.FrontMatter.Completion.Issues {
									<span class="inline-block w-2 h-2 rounded-full bg-green-600 shadow-lime-200 mr-3 relative"></span> <span class="text-green-700">Issues added</span>
								} else {
									<span class="inline-block w-2 h-2 rounded-full bg-gray-300 mr-3"></span> <span class="text-gray-500">Issues incomplete</span>
								}
							</li>
							<li>
								if file.FrontMatter.Completion.Notes {
									<span class="inline-block w-2 h-2 rounded-full bg-green-600 shadow-lime-200 mr-3 relative"></span> <span class="text-green-700">Notes added</span>
								} else {
									<span class="inline-block w-2 h-2 rounded-full bg-gray-300 mr-3"></span> <span class="text-gray-500">Notes incomplete</span>
								}
							</li>
							if file.FrontMatter.Source.Kind == "audio" || file.FrontMatter.Source.Kind == "video" {
								<li>
									if file.FrontMatter.Completion.Timestamps {
										<span class="inline-block w-2 h-2 rounded-full bg-green-600 shadow-lime-200 mr-3 relative"></span> <span class="text-green-700">Timestamps added</span>
									} else {
										<span class="inline-block w-2 h-2 rounded-full bg-gray-300 mr-3"></span> <span class="text-gray-500">Timestamps incomplete</span>
									}
								</li>
							}
						</ul>
					</div>
				}
				<!-- Edit / Download Asset -->
				<div
					data-pagefind-ignore
					class="
            block z-10 transition-all m-2 hover:translate-y-1 shadow-lg hover:shadow-2xl shadow-stone-800/20 hover:shadow-stone-600/40 rounded-md w-2/5 mr-[-10px] lg:mr-[-10%] xl:mr-[-20%] float-right clear-right text-sm relative leading-5 tracking-tight overflow-hidden
          "
				>
					<div class="grid grid-flow-col grid-cols-2 tracking-wider">
						<a
							class="
                block p-4 
                [&:hover_span]:opacity-65 [&:hover_img]:opacity-75
                bg-gradient-to-bl from-stone-200 from-10% to-stone-300 
                hover:bg-gradient-to-b hover:from-40% hover:from-yellow-200 hover:to-orange-300
                grid grid-flow-row
                transition-all
                border-r border-stone-300
              "
							href={ templ.URL(file.EditPermalink) }
							title="Edit this page on GitHub"
						>
							<img
								src="/assets/images/edit-round-icon.svg"
								alt="Edit pencil upon a black disc"
								class="h-10 mx-auto opacity-50 mt-4 mb-2"
							/>
							<span class="uppercase text-center mb-2 text-black opacity-50 font-bold">Edit</span>
						</a>
						<a
							class="
                block p-4 
                [&:hover_span]:opacity-65 [&:hover_img]:opacity-75
                grid grid-flow-row 
                bg-gradient-to-br from-stone-200 from-10% to-stone-300
                hover:bg-gradient-to-br hover:from-40% hover:from-sky-200 hover:to-indigo-300
              "
							href={ templ.URL(file.RawPermalink) }
							title="Download this page as raw Markdown"
						>
							<img
								src="/assets/images/round-line-bottom-arrow-icon.svg"
								alt="Downwards arrow within a circle"
								class="h-10 mx-auto opacity-50 mt-4 mb-2 bg-clip-text bg-blue-400"
							/>
							<span class="uppercase text-center mb-2 text-black opacity-50 font-bold">Save</span>
						</a>
					</div>
				</div>
				<!-- Content -->
				<div class="relative">
					@Unsafe(string(file.Html))
				</div>
				if !file.FrontMatter.Completion.Content {
					<div data-pagefind-ignore class="mr-16 mb-32">
						<!-- Message -->
						<div class="rounded shadow p-8 bg-gradient-to-b from-gray-50 to-gray-100 text-gray-900 mb-8">
							if file.FrontMatter.Transcription.Url != "" {
								<p>
									This interview is missing from Ray Peat Rodeo. However, there is an 
									<a
										href={ templ.URL(file.FrontMatter.Transcription.Url) }
										class="font-bold text-gray-800 underline decoration-2 hover:decoration-4"
									>existing transcript</a>
									if file.FrontMatter.Transcription.Kind == "auto-generated" {
										that's AI generated.
									} else if file.FrontMatter.Transcription.Kind == "text" {
										by a human being.
									} else {
										I've yet to look at.
									}
									If you're familiar with Markdown, you can 
									<a
										href={ templ.URL(file.EditPermalink) }
										class="font-bold text-gray-800 underline decoration-2 hover:decoration-4"
									>add it</a>
									to the website yourself via GitHub. Or you may support me on 
									<a
										href={ global.SPONSOR_LINK }
										class="font-bold text-gray-800 underline decoration-2 hover:decoration-4"
									>GitHub Sponsors</a>.
								</p>
							} else {
								<p>
									This interview is missing from Ray Peat Rodeo. If you have a transcription, please 
									<a
										href={ templ.URL(file.EditPermalink) }
										class="font-bold text-gray-800 underline decoration-2 hover:decoration-4"
									>edit this page</a>
									on GitHub, or sponsor me on 
									<a
										href={ global.SPONSOR_LINK }
										class="font-bold text-gray-800 underline decoration-2 hover:decoration-4"
									>GitHub Sponsors</a> and I'll get to this interview faster.
								</p>
							}
						</div>
					</div>
				}
			</main>
			<div class="text-center max-w-2xl mx-auto">
				<a href="/" class="mb-16 inline-block mx-auto px-8 py-4 rounded-full text-xl hover:bg-gradient-to-tl from-fuchsia-900 to-pink-600 text-gray-400 hover:text-white font-bold border-2 hover:border-white hover:border-solid border-gray-300 border-dashed">
					More Interviews
				</a>
			</div>
		</article>
	}
}
