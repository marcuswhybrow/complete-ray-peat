package main

import "github.com/marcuswhybrow/ray-peat-rodeo/internal/markdown/ast"

templ MentionablePopup(mentionable ast.Mentionable, mentionsByFile ByFile[Mentions], otherMentionables []ast.Mentionable) {
	<html data-pagefind-ignore>
		<head>
			<link rel="stylesheet" href="/assets/tailwind.css"/>
		</head>
		<body>
			<div class="w-[400px] h-[300px] rounded bg-white shadow m-16 overflow-y-scroll scrollbar-thin scrollbar-thumb-slate-500 scrollbar-track-slate-100">
				<div class="hx-select">
					@header(mentionable)
					<div class="text-sm text-center px-8 mb-6">
						<span class="relative py-4 px-8 top-[-11px] bg-slate-100 text-slate-400 rounded-full">mentioned in</span>
					</div>
					for file, mentions := range mentionsByFile {
						<div>
							<div
 								class="
                  px-8
                  pt-2 
                  text-center sticky top-0 
                  backdrop-blur-2xl
                  bg-white/90
                "
							>
								<a
 									class="text-slate-600 hover:text-slate-800 hover:underline"
 									href={ templ.URL(file.Permalink) }
								>
									{ file.FrontMatter.Source.Title }
								</a>
								<div class="mt-2 bg-gradient-to-r from-slate-200/0 via-slate-200 to-slate-200/0 h-px"></div>
							</div>
							<div class="pt-4 pb-4">
								for _, mention := range mentions {
									<blockquote
 										class={ "px-8 pb-4 text-sm text-slate-700" }
									>
										@Unsafe(string(mention.VignetteHTML(file.Markdown, 50)))
									</blockquote>
								}
							</div>
						</div>
					}
					@related(otherMentionables)
				</div>
			</div>
		</body>
	</html>
}

templ header(mentionable ast.Mentionable) {
	<div class="pt-10 px-8 pb-8 bg-slate-100 z-20">
		if mentionable.HasSecondary() {
			<div
 				class={
					"text-sm text-center text-slate-500 hover:text-slate-800 hover:underline",
					templ.KV("break-all", mentionable.Primary.IsURL()),
				}
			>
				<a
 					href={ templ.URL(mentionable.PermalinkForPrimary()) }
 					class={
						templ.SafeClass("text-slate-500 hover:text-slate-800 hover:underline"),
						templ.KV("break-all", mentionable.Ultimate().IsURL()),
					}
				>
					{ mentionable.Primary.CardinalFirst() }
				</a>
			</div>
		}
		<h3 class="text-center text-xl pb-2 tracking-wide">
			<a
 				href={ templ.URL(mentionable.Permalink()) }
 				class={
					templ.SafeClass("text-slate-500 hover:text-slate-800 hover:underline"),
					templ.KV("break-all", mentionable.Ultimate().IsURL()),
				}
			>
				{ mentionable.Ultimate().CardinalFirst() }
			</a>
		</h3>
		if mentionable.Ultimate().IsURL() {
			<a
 				href={ templ.URL(mentionable.Ultimate().Cardinal) }
 				class="px-4 py-2 mt-4 mb-4 text-slate-600 hover:text-slate-50 bg-slate-300 hover:bg-slate-400 rounded-lg block text-center"
			>
				Visit Link
			</a>
		} else if mentionable.Ultimate().IsEmailAddress() {
			<a
 				href={ templ.URL("mailto:" + mentionable.Ultimate().Cardinal) }
 				class="px-4 py-2 mt-4 mb-4 text-slate-600 hover:text-slate-50 bg-slate-300 hover:bg-slate-400 rounded-lg block text-center"
			>
				Send Email
			</a>
		}
	</div>
}

templ related(otherMentionables []ast.Mentionable) {
	if len(otherMentionables) > 0 {
		<div class="text-sm text-center px-8 mt-6">
			<span class="relative py-4 px-8 top-[11px] bg-slate-100 text-slate-400 rounded-full">related mentions</span>
		</div>
		<div class="bg-slate-100 px-8 pt-8 pb-8 text-center">
			for i, mentionable := range otherMentionables {
				if i > 0 && i < len(otherMentionables) {
					<span class="text-slate-300">{ " â€¢ " }</span>
				}
				<a
 					href={ templ.URL(mentionable.Permalink()) }
 					class="text-sm text-slate-700 hover:text-slate-800 hover:border-b hover:border-b-slate-800"
				>
					{ mentionable.Ultimate().PrefixFirst() }
				</a>
			}
		</div>
	}
}
